{
    "sourceFile": "lecture_alert/notification/infobip_service.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1737125414732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1737125872059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,25 +6,43 @@\n from django.conf import settings\r\n \r\n class InfobipService:\r\n     def __init__(self):\r\n-        configuration = Configuration(\r\n-            host=settings.INFOBIP_BASE_URL,\r\n-            api_key=settings.INFOBIP_API_KEY\r\n+        self.configuration = Configuration(\r\n+            host=\"wgx5gy.api.infobip.com\",\r\n+            api_key=\"705e2e9f63bbb0257576074beedcd78b-48738de4-8bf4-49d8-8402-d34ed38efdf7\"\r\n         )\r\n-        self.api_client = ApiClient(configuration)\r\n-        self.api_instance = SendSmsApi(self.api_client)\r\n+        self.api_client = ApiClient(self.configuration)\r\n+        self.sms_api = SendSmsApi(self.api_client)\r\n \r\n-    def send_sms(self, phone_number, message):\r\n-        destination = SmsDestination(to=phone_number)\r\n-        sms_message = SmsTextualMessage(\r\n-            destinations=[destination],\r\n-            text=message,\r\n-            from_=settings.SENDER_PHONE\r\n-        )\r\n-        request = SmsAdvancedTextualRequest(messages=[sms_message])\r\n-        \r\n\\ No newline at end of file\n+    def send_message(self, phone_number, message_text):\r\n         try:\r\n-            response = self.api_instance.send_sms_message(request)\r\n-            return True, response\r\n+            # Create destination\r\n+            destination = SmsDestination(to=phone_number)\r\n+\r\n+            # Create message\r\n+            message = SmsTextualMessage(\r\n+                destinations=[destination],\r\n+                text=message_text,\r\n+                from_=\"447491163443\"  # Your sender ID\r\n+            )\r\n+\r\n+            # Create request\r\n+            request = SmsAdvancedTextualRequest(messages=[message])\r\n+\r\n+            # Send message\r\n+            api_response = self.sms_api.send_sms_message(request)\r\n+            \r\n+            return True, api_response\r\n+            \r\n         except Exception as e:\r\n-            return False, str(e)\n+            return False, str(e)\r\n+\r\n+# Usage example:\r\n+if __name__ == \"__main__\":\r\n+    sms_service = InfobipService()\r\n+    success, response = sms_service.send_message(\r\n+        \"254113021960\",\r\n+        \"Test message from InfoBip API client\"\r\n+    )\r\n+    print(f\"Success: {success}\")\r\n+    print(f\"Response: {response}\")\n\\ No newline at end of file\n"
                },
                {
                    "date": 1737126003428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,48 +1,40 @@\n-from infobip_api_client.api_client import ApiClient, Configuration\r\n-from infobip_api_client.model.sms_advanced_textual_request import SmsAdvancedTextualRequest\r\n-from infobip_api_client.model.sms_destination import SmsDestination\r\n-from infobip_api_client.model.sms_textual_message import SmsTextualMessage\r\n-from infobip_api_client.api.send_sms_api import SendSmsApi\r\n+import http.client\r\n+import json\r\n from django.conf import settings\r\n \r\n class InfobipService:\r\n     def __init__(self):\r\n-        self.configuration = Configuration(\r\n-            host=\"wgx5gy.api.infobip.com\",\r\n-            api_key=\"705e2e9f63bbb0257576074beedcd78b-48738de4-8bf4-49d8-8402-d34ed38efdf7\"\r\n-        )\r\n-        self.api_client = ApiClient(self.configuration)\r\n-        self.sms_api = SendSmsApi(self.api_client)\r\n+        self.host = \"wgx5gy.api.infobip.com\"\r\n+        self.api_key = \"705e2e9f63bbb0257576074beedcd78b-48738de4-8bf4-49d8-8402-d34ed38efdf7\"\r\n+        self.sender = \"447491163443\"\r\n \r\n-    def send_message(self, phone_number, message_text):\r\n+    def send_sms(self, phone_number, message):\r\n         try:\r\n-            # Create destination\r\n-            destination = SmsDestination(to=phone_number)\r\n-\r\n-            # Create message\r\n-            message = SmsTextualMessage(\r\n-                destinations=[destination],\r\n-                text=message_text,\r\n-                from_=\"447491163443\"  # Your sender ID\r\n-            )\r\n-\r\n-            # Create request\r\n-            request = SmsAdvancedTextualRequest(messages=[message])\r\n-\r\n-            # Send message\r\n-            api_response = self.sms_api.send_sms_message(request)\r\n+            conn = http.client.HTTPSConnection(self.host)\r\n             \r\n-            return True, api_response\r\n+            payload = json.dumps({\r\n+                \"messages\": [\r\n+                    {\r\n+                        \"destinations\": [{\"to\": phone_number}],\r\n+                        \"from\": self.sender,\r\n+                        \"text\": message\r\n\\ No newline at end of file\n+                    }\r\n+                ]\r\n+            })\r\n             \r\n+            headers = {\r\n+                'Authorization': f'App {self.api_key}',\r\n+                'Content-Type': 'application/json',\r\n+                'Accept': 'application/json'\r\n+            }\r\n+            \r\n+            conn.request(\"POST\", \"/sms/2/text/advanced\", payload, headers)\r\n+            response = conn.getresponse()\r\n+            data = response.read()\r\n+            \r\n+            return True, data.decode(\"utf-8\")\r\n+            \r\n         except Exception as e:\r\n             return False, str(e)\r\n-\r\n-# Usage example:\r\n-if __name__ == \"__main__\":\r\n-    sms_service = InfobipService()\r\n-    success, response = sms_service.send_message(\r\n-        \"254113021960\",\r\n-        \"Test message from InfoBip API client\"\r\n-    )\r\n-    print(f\"Success: {success}\")\r\n-    print(f\"Response: {response}\")\n+        finally:\r\n+            conn.close()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1737126166063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,40 +1,25 @@\n-import http.client\r\n-import json\r\n-from django.conf import settings\r\n-\r\n-class InfobipService:\r\n-    def __init__(self):\r\n-        self.host = \"wgx5gy.api.infobip.com\"\r\n-        self.api_key = \"705e2e9f63bbb0257576074beedcd78b-48738de4-8bf4-49d8-8402-d34ed38efdf7\"\r\n-        self.sender = \"447491163443\"\r\n-\r\n-    def send_sms(self, phone_number, message):\r\n-        try:\r\n-            conn = http.client.HTTPSConnection(self.host)\r\n-            \r\n-            payload = json.dumps({\r\n-                \"messages\": [\r\n-                    {\r\n-                        \"destinations\": [{\"to\": phone_number}],\r\n-                        \"from\": self.sender,\r\n-                        \"text\": message\r\n-                    }\r\n-                ]\r\n-            })\r\n-            \r\n-            headers = {\r\n-                'Authorization': f'App {self.api_key}',\r\n-                'Content-Type': 'application/json',\r\n-                'Accept': 'application/json'\r\n-            }\r\n-            \r\n-            conn.request(\"POST\", \"/sms/2/text/advanced\", payload, headers)\r\n-            response = conn.getresponse()\r\n-            data = response.read()\r\n-            \r\n-            return True, data.decode(\"utf-8\")\r\n-            \r\n-        except Exception as e:\r\n-            return False, str(e)\r\n-        finally:\r\n-            conn.close()\n\\ No newline at end of file\n+F:\\Lecture_alert\\lecture_alert>python manage.py shell\r\n+Python 3.13.1 (tags/v3.13.1:0671451, Dec  3 2024, 19:06:28) [MSC v.1942 64 bit (AMD64)] on win32\r\n+Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.    \r\n+(InteractiveConsole)\r\n+>>> >>> from notification.infobip_service import InfobipService\r\n+  File \"<console>\", line 1\r\n+    >>> from notification.infobip_service import InfobipService\r\n+    ^^\r\n+SyntaxError: invalid syntax\r\n+>>> >>> service = InfobipService()\r\n+  File \"<console>\", line 1\r\n+    >>> service = InfobipService()\r\n+    ^^\r\n+SyntaxError: invalid syntax\r\n+>>> >>> success, response = service.send_sms(\"254113021960\", \"Test message\")\r\n+  File \"<console>\", line 1\r\n+    >>> success, response = service.send_sms(\"254113021960\", \"Test message\")\r\n+    ^^\r\n+SyntaxError: invalid syntax\r\n+>>> >>> print(response)\r\n+  File \"<console>\", line 1\r\n+    >>> print(response)\r\n+    ^^\r\n+SyntaxError: invalid syntax\r\n+>>>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1737126177052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,41 @@\n-F:\\Lecture_alert\\lecture_alert>python manage.py shell\r\n-Python 3.13.1 (tags/v3.13.1:0671451, Dec  3 2024, 19:06:28) [MSC v.1942 64 bit (AMD64)] on win32\r\n-Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.    \r\n-(InteractiveConsole)\r\n->>> >>> from notification.infobip_service import InfobipService\r\n-  File \"<console>\", line 1\r\n-    >>> from notification.infobip_service import InfobipService\r\n-    ^^\r\n-SyntaxError: invalid syntax\r\n->>> >>> service = InfobipService()\r\n-  File \"<console>\", line 1\r\n-    >>> service = InfobipService()\r\n-    ^^\r\n-SyntaxError: invalid syntax\r\n->>> >>> success, response = service.send_sms(\"254113021960\", \"Test message\")\r\n-  File \"<console>\", line 1\r\n-    >>> success, response = service.send_sms(\"254113021960\", \"Test message\")\r\n-    ^^\r\n-SyntaxError: invalid syntax\r\n->>> >>> print(response)\r\n-  File \"<console>\", line 1\r\n-    >>> print(response)\r\n-    ^^\r\n-SyntaxError: invalid syntax\r\n->>>\n\\ No newline at end of file\n+import http.client\r\n+import json\r\n+from django.conf import settings\r\n+\r\n+class InfobipService:\r\n+    def __init__(self):\r\n+        self.host = \"wgx5gy.api.infobip.com\"\r\n+        self.api_key = \"705e2e9f63bbb0257576074beedcd78b-48738de4-8bf4-49d8-8402-d34ed38efdf7\"\r\n+        self.sender = \"447491163443\"\r\n+\r\n+    def send_sms(self, phone_number, message):\r\n+        try:\r\n+            conn = http.client.HTTPSConnection(self.host)\r\n+            \r\n+            payload = json.dumps({\r\n+                \"messages\": [\r\n+                    {\r\n+                        \"destinations\": [{\"to\": phone_number}],\r\n+                        \"from\": self.sender,\r\n+                        \"text\": message\r\n+                    }\r\n+                ]\r\n+            })\r\n+            \r\n+            headers = {\r\n+                'Authorization': f'App {self.api_key}',\r\n+                'Content-Type': 'application/json',\r\n+                'Accept': 'application/json'\r\n+            }\r\n+            \r\n+            conn.request(\"POST\", \"/sms/2/text/advanced\", payload, headers)\r\n+            response = conn.getresponse()\r\n+            data = response.read()\r\n+            \r\n+            return True, json.loads(data.decode(\"utf-8\"))\r\n+            \r\n+        except Exception as e:\r\n+            return False, str(e)\r\n+        finally:\r\n+            if conn:\r\n+                conn.close()\n\\ No newline at end of file\n"
                }
            ],
            "date": 1737125414732,
            "name": "Commit-0",
            "content": "from infobip_api_client.api_client import ApiClient, Configuration\r\nfrom infobip_api_client.model.sms_advanced_textual_request import SmsAdvancedTextualRequest\r\nfrom infobip_api_client.model.sms_destination import SmsDestination\r\nfrom infobip_api_client.model.sms_textual_message import SmsTextualMessage\r\nfrom infobip_api_client.api.send_sms_api import SendSmsApi\r\nfrom django.conf import settings\r\n\r\nclass InfobipService:\r\n    def __init__(self):\r\n        configuration = Configuration(\r\n            host=settings.INFOBIP_BASE_URL,\r\n            api_key=settings.INFOBIP_API_KEY\r\n        )\r\n        self.api_client = ApiClient(configuration)\r\n        self.api_instance = SendSmsApi(self.api_client)\r\n\r\n    def send_sms(self, phone_number, message):\r\n        destination = SmsDestination(to=phone_number)\r\n        sms_message = SmsTextualMessage(\r\n            destinations=[destination],\r\n            text=message,\r\n            from_=settings.SENDER_PHONE\r\n        )\r\n        request = SmsAdvancedTextualRequest(messages=[sms_message])\r\n        \r\n        try:\r\n            response = self.api_instance.send_sms_message(request)\r\n            return True, response\r\n        except Exception as e:\r\n            return False, str(e)"
        }
    ]
}